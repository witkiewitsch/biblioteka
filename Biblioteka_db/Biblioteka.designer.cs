#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Biblioteka_db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="xxxx")]
	public partial class BibliotekaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAutor(Autor instance);
    partial void UpdateAutor(Autor instance);
    partial void DeleteAutor(Autor instance);
    partial void InsertWypozyczenie(Wypozyczenie instance);
    partial void UpdateWypozyczenie(Wypozyczenie instance);
    partial void DeleteWypozyczenie(Wypozyczenie instance);
    partial void InsertEgzemplarz(Egzemplarz instance);
    partial void UpdateEgzemplarz(Egzemplarz instance);
    partial void DeleteEgzemplarz(Egzemplarz instance);
    partial void InsertKategoria(Kategoria instance);
    partial void UpdateKategoria(Kategoria instance);
    partial void DeleteKategoria(Kategoria instance);
    partial void InsertKategoriaKsiazki(KategoriaKsiazki instance);
    partial void UpdateKategoriaKsiazki(KategoriaKsiazki instance);
    partial void DeleteKategoriaKsiazki(KategoriaKsiazki instance);
    partial void InsertKsiazka(Ksiazka instance);
    partial void UpdateKsiazka(Ksiazka instance);
    partial void DeleteKsiazka(Ksiazka instance);
    partial void InsertKsiazkaAutora(KsiazkaAutora instance);
    partial void UpdateKsiazkaAutora(KsiazkaAutora instance);
    partial void DeleteKsiazkaAutora(KsiazkaAutora instance);
    partial void InsertUzytkownik(Uzytkownik instance);
    partial void UpdateUzytkownik(Uzytkownik instance);
    partial void DeleteUzytkownik(Uzytkownik instance);
    #endregion
		
		public BibliotekaDataContext() : 
				base(global::Biblioteka_db.Properties.Settings.Default.xxxxConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public BibliotekaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BibliotekaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BibliotekaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BibliotekaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Autor> Autors
		{
			get
			{
				return this.GetTable<Autor>();
			}
		}
		
		public System.Data.Linq.Table<Wypozyczenie> Wypozyczenies
		{
			get
			{
				return this.GetTable<Wypozyczenie>();
			}
		}
		
		public System.Data.Linq.Table<Egzemplarz> Egzemplarzs
		{
			get
			{
				return this.GetTable<Egzemplarz>();
			}
		}
		
		public System.Data.Linq.Table<Kategoria> Kategorias
		{
			get
			{
				return this.GetTable<Kategoria>();
			}
		}
		
		public System.Data.Linq.Table<KategoriaKsiazki> KategoriaKsiazkis
		{
			get
			{
				return this.GetTable<KategoriaKsiazki>();
			}
		}
		
		public System.Data.Linq.Table<Ksiazka> Ksiazkas
		{
			get
			{
				return this.GetTable<Ksiazka>();
			}
		}
		
		public System.Data.Linq.Table<KsiazkaAutora> KsiazkaAutoras
		{
			get
			{
				return this.GetTable<KsiazkaAutora>();
			}
		}
		
		public System.Data.Linq.Table<Uzytkownik> Uzytkowniks
		{
			get
			{
				return this.GetTable<Uzytkownik>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autor")]
	public partial class Autor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _imie;
		
		private string _nazwisko;
		
		private System.Nullable<short> _rokUrodzenia;
		
		private EntitySet<KsiazkaAutora> _KsiazkaAutoras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    partial void OnnazwiskoChanging(string value);
    partial void OnnazwiskoChanged();
    partial void OnrokUrodzeniaChanging(System.Nullable<short> value);
    partial void OnrokUrodzeniaChanged();
    #endregion
		
		public Autor()
		{
			this._KsiazkaAutoras = new EntitySet<KsiazkaAutora>(new Action<KsiazkaAutora>(this.attach_KsiazkaAutoras), new Action<KsiazkaAutora>(this.detach_KsiazkaAutoras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwisko
		{
			get
			{
				return this._nazwisko;
			}
			set
			{
				if ((this._nazwisko != value))
				{
					this.OnnazwiskoChanging(value);
					this.SendPropertyChanging();
					this._nazwisko = value;
					this.SendPropertyChanged("nazwisko");
					this.OnnazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rokUrodzenia", DbType="SmallInt")]
		public System.Nullable<short> rokUrodzenia
		{
			get
			{
				return this._rokUrodzenia;
			}
			set
			{
				if ((this._rokUrodzenia != value))
				{
					this.OnrokUrodzeniaChanging(value);
					this.SendPropertyChanging();
					this._rokUrodzenia = value;
					this.SendPropertyChanged("rokUrodzenia");
					this.OnrokUrodzeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_KsiazkaAutora", Storage="_KsiazkaAutoras", ThisKey="id", OtherKey="autorID")]
		public EntitySet<KsiazkaAutora> KsiazkaAutoras
		{
			get
			{
				return this._KsiazkaAutoras;
			}
			set
			{
				this._KsiazkaAutoras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KsiazkaAutoras(KsiazkaAutora entity)
		{
			this.SendPropertyChanging();
			entity.Autor = this;
		}
		
		private void detach_KsiazkaAutoras(KsiazkaAutora entity)
		{
			this.SendPropertyChanging();
			entity.Autor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wypozyczenie")]
	public partial class Wypozyczenie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _uzytkownikID;
		
		private int _egzemplarzID;
		
		private System.DateTime _dataRozpoczecia;
		
		private System.Nullable<System.DateTime> _dataZakonczenia;
		
		private bool _czyWypozyczona;
		
		private bool _czyZarezerwowana;
		
		private EntityRef<Egzemplarz> _Egzemplarz;
		
		private EntityRef<Uzytkownik> _Uzytkownik;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuzytkownikIDChanging(int value);
    partial void OnuzytkownikIDChanged();
    partial void OnegzemplarzIDChanging(int value);
    partial void OnegzemplarzIDChanged();
    partial void OndataRozpoczeciaChanging(System.DateTime value);
    partial void OndataRozpoczeciaChanged();
    partial void OndataZakonczeniaChanging(System.Nullable<System.DateTime> value);
    partial void OndataZakonczeniaChanged();
    partial void OnczyWypozyczonaChanging(bool value);
    partial void OnczyWypozyczonaChanged();
    partial void OnczyZarezerwowanaChanging(bool value);
    partial void OnczyZarezerwowanaChanged();
    #endregion
		
		public Wypozyczenie()
		{
			this._Egzemplarz = default(EntityRef<Egzemplarz>);
			this._Uzytkownik = default(EntityRef<Uzytkownik>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uzytkownikID", DbType="Int NOT NULL")]
		public int uzytkownikID
		{
			get
			{
				return this._uzytkownikID;
			}
			set
			{
				if ((this._uzytkownikID != value))
				{
					if (this._Uzytkownik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuzytkownikIDChanging(value);
					this.SendPropertyChanging();
					this._uzytkownikID = value;
					this.SendPropertyChanged("uzytkownikID");
					this.OnuzytkownikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_egzemplarzID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int egzemplarzID
		{
			get
			{
				return this._egzemplarzID;
			}
			set
			{
				if ((this._egzemplarzID != value))
				{
					if (this._Egzemplarz.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnegzemplarzIDChanging(value);
					this.SendPropertyChanging();
					this._egzemplarzID = value;
					this.SendPropertyChanged("egzemplarzID");
					this.OnegzemplarzIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataRozpoczecia", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime dataRozpoczecia
		{
			get
			{
				return this._dataRozpoczecia;
			}
			set
			{
				if ((this._dataRozpoczecia != value))
				{
					this.OndataRozpoczeciaChanging(value);
					this.SendPropertyChanging();
					this._dataRozpoczecia = value;
					this.SendPropertyChanged("dataRozpoczecia");
					this.OndataRozpoczeciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataZakonczenia", DbType="DateTime")]
		public System.Nullable<System.DateTime> dataZakonczenia
		{
			get
			{
				return this._dataZakonczenia;
			}
			set
			{
				if ((this._dataZakonczenia != value))
				{
					this.OndataZakonczeniaChanging(value);
					this.SendPropertyChanging();
					this._dataZakonczenia = value;
					this.SendPropertyChanged("dataZakonczenia");
					this.OndataZakonczeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czyWypozyczona", DbType="Bit NOT NULL")]
		public bool czyWypozyczona
		{
			get
			{
				return this._czyWypozyczona;
			}
			set
			{
				if ((this._czyWypozyczona != value))
				{
					this.OnczyWypozyczonaChanging(value);
					this.SendPropertyChanging();
					this._czyWypozyczona = value;
					this.SendPropertyChanged("czyWypozyczona");
					this.OnczyWypozyczonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czyZarezerwowana", DbType="Bit NOT NULL")]
		public bool czyZarezerwowana
		{
			get
			{
				return this._czyZarezerwowana;
			}
			set
			{
				if ((this._czyZarezerwowana != value))
				{
					this.OnczyZarezerwowanaChanging(value);
					this.SendPropertyChanging();
					this._czyZarezerwowana = value;
					this.SendPropertyChanged("czyZarezerwowana");
					this.OnczyZarezerwowanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egzemplarz_Wypozyczenie", Storage="_Egzemplarz", ThisKey="egzemplarzID", OtherKey="id", IsForeignKey=true)]
		public Egzemplarz Egzemplarz
		{
			get
			{
				return this._Egzemplarz.Entity;
			}
			set
			{
				Egzemplarz previousValue = this._Egzemplarz.Entity;
				if (((previousValue != value) 
							|| (this._Egzemplarz.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Egzemplarz.Entity = null;
						previousValue.Wypozyczenies.Remove(this);
					}
					this._Egzemplarz.Entity = value;
					if ((value != null))
					{
						value.Wypozyczenies.Add(this);
						this._egzemplarzID = value.id;
					}
					else
					{
						this._egzemplarzID = default(int);
					}
					this.SendPropertyChanged("Egzemplarz");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Wypozyczenie", Storage="_Uzytkownik", ThisKey="uzytkownikID", OtherKey="id", IsForeignKey=true)]
		public Uzytkownik Uzytkownik
		{
			get
			{
				return this._Uzytkownik.Entity;
			}
			set
			{
				Uzytkownik previousValue = this._Uzytkownik.Entity;
				if (((previousValue != value) 
							|| (this._Uzytkownik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uzytkownik.Entity = null;
						previousValue.Wypozyczenies.Remove(this);
					}
					this._Uzytkownik.Entity = value;
					if ((value != null))
					{
						value.Wypozyczenies.Add(this);
						this._uzytkownikID = value.id;
					}
					else
					{
						this._uzytkownikID = default(int);
					}
					this.SendPropertyChanged("Uzytkownik");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Egzemplarz")]
	public partial class Egzemplarz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ksiazkaID;
		
		private EntitySet<Wypozyczenie> _Wypozyczenies;
		
		private EntityRef<Ksiazka> _Ksiazka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnksiazkaIDChanging(int value);
    partial void OnksiazkaIDChanged();
    #endregion
		
		public Egzemplarz()
		{
			this._Wypozyczenies = new EntitySet<Wypozyczenie>(new Action<Wypozyczenie>(this.attach_Wypozyczenies), new Action<Wypozyczenie>(this.detach_Wypozyczenies));
			this._Ksiazka = default(EntityRef<Ksiazka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ksiazkaID", DbType="Int NOT NULL")]
		public int ksiazkaID
		{
			get
			{
				return this._ksiazkaID;
			}
			set
			{
				if ((this._ksiazkaID != value))
				{
					if (this._Ksiazka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnksiazkaIDChanging(value);
					this.SendPropertyChanging();
					this._ksiazkaID = value;
					this.SendPropertyChanged("ksiazkaID");
					this.OnksiazkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Egzemplarz_Wypozyczenie", Storage="_Wypozyczenies", ThisKey="id", OtherKey="egzemplarzID")]
		public EntitySet<Wypozyczenie> Wypozyczenies
		{
			get
			{
				return this._Wypozyczenies;
			}
			set
			{
				this._Wypozyczenies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_Egzemplarz", Storage="_Ksiazka", ThisKey="ksiazkaID", OtherKey="id", IsForeignKey=true)]
		public Ksiazka Ksiazka
		{
			get
			{
				return this._Ksiazka.Entity;
			}
			set
			{
				Ksiazka previousValue = this._Ksiazka.Entity;
				if (((previousValue != value) 
							|| (this._Ksiazka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ksiazka.Entity = null;
						previousValue.Egzemplarzs.Remove(this);
					}
					this._Ksiazka.Entity = value;
					if ((value != null))
					{
						value.Egzemplarzs.Add(this);
						this._ksiazkaID = value.id;
					}
					else
					{
						this._ksiazkaID = default(int);
					}
					this.SendPropertyChanged("Ksiazka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wypozyczenies(Wypozyczenie entity)
		{
			this.SendPropertyChanging();
			entity.Egzemplarz = this;
		}
		
		private void detach_Wypozyczenies(Wypozyczenie entity)
		{
			this.SendPropertyChanging();
			entity.Egzemplarz = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kategoria")]
	public partial class Kategoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _kategoriaNadrzednaID;
		
		private string _nazwa;
		
		private EntitySet<Kategoria> _Kategorias;
		
		private EntitySet<KategoriaKsiazki> _KategoriaKsiazkis;
		
		private EntityRef<Kategoria> _Kategoria1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkategoriaNadrzednaIDChanging(System.Nullable<int> value);
    partial void OnkategoriaNadrzednaIDChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    #endregion
		
		public Kategoria()
		{
			this._Kategorias = new EntitySet<Kategoria>(new Action<Kategoria>(this.attach_Kategorias), new Action<Kategoria>(this.detach_Kategorias));
			this._KategoriaKsiazkis = new EntitySet<KategoriaKsiazki>(new Action<KategoriaKsiazki>(this.attach_KategoriaKsiazkis), new Action<KategoriaKsiazki>(this.detach_KategoriaKsiazkis));
			this._Kategoria1 = default(EntityRef<Kategoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kategoriaNadrzednaID", DbType="Int")]
		public System.Nullable<int> kategoriaNadrzednaID
		{
			get
			{
				return this._kategoriaNadrzednaID;
			}
			set
			{
				if ((this._kategoriaNadrzednaID != value))
				{
					if (this._Kategoria1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkategoriaNadrzednaIDChanging(value);
					this.SendPropertyChanging();
					this._kategoriaNadrzednaID = value;
					this.SendPropertyChanged("kategoriaNadrzednaID");
					this.OnkategoriaNadrzednaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_Kategoria", Storage="_Kategorias", ThisKey="id", OtherKey="kategoriaNadrzednaID")]
		public EntitySet<Kategoria> Kategorias
		{
			get
			{
				return this._Kategorias;
			}
			set
			{
				this._Kategorias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_KategoriaKsiazki", Storage="_KategoriaKsiazkis", ThisKey="id", OtherKey="kategoriaID")]
		public EntitySet<KategoriaKsiazki> KategoriaKsiazkis
		{
			get
			{
				return this._KategoriaKsiazkis;
			}
			set
			{
				this._KategoriaKsiazkis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_Kategoria", Storage="_Kategoria1", ThisKey="kategoriaNadrzednaID", OtherKey="id", IsForeignKey=true)]
		public Kategoria Kategoria1
		{
			get
			{
				return this._Kategoria1.Entity;
			}
			set
			{
				Kategoria previousValue = this._Kategoria1.Entity;
				if (((previousValue != value) 
							|| (this._Kategoria1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoria1.Entity = null;
						previousValue.Kategorias.Remove(this);
					}
					this._Kategoria1.Entity = value;
					if ((value != null))
					{
						value.Kategorias.Add(this);
						this._kategoriaNadrzednaID = value.id;
					}
					else
					{
						this._kategoriaNadrzednaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kategoria1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kategorias(Kategoria entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria1 = this;
		}
		
		private void detach_Kategorias(Kategoria entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria1 = null;
		}
		
		private void attach_KategoriaKsiazkis(KategoriaKsiazki entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria = this;
		}
		
		private void detach_KategoriaKsiazkis(KategoriaKsiazki entity)
		{
			this.SendPropertyChanging();
			entity.Kategoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KategoriaKsiazki")]
	public partial class KategoriaKsiazki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _kategoriaID;
		
		private int _ksiazkaID;
		
		private EntityRef<Kategoria> _Kategoria;
		
		private EntityRef<Ksiazka> _Ksiazka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkategoriaIDChanging(int value);
    partial void OnkategoriaIDChanged();
    partial void OnksiazkaIDChanging(int value);
    partial void OnksiazkaIDChanged();
    #endregion
		
		public KategoriaKsiazki()
		{
			this._Kategoria = default(EntityRef<Kategoria>);
			this._Ksiazka = default(EntityRef<Ksiazka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kategoriaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int kategoriaID
		{
			get
			{
				return this._kategoriaID;
			}
			set
			{
				if ((this._kategoriaID != value))
				{
					if (this._Kategoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnkategoriaIDChanging(value);
					this.SendPropertyChanging();
					this._kategoriaID = value;
					this.SendPropertyChanged("kategoriaID");
					this.OnkategoriaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ksiazkaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ksiazkaID
		{
			get
			{
				return this._ksiazkaID;
			}
			set
			{
				if ((this._ksiazkaID != value))
				{
					if (this._Ksiazka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnksiazkaIDChanging(value);
					this.SendPropertyChanging();
					this._ksiazkaID = value;
					this.SendPropertyChanged("ksiazkaID");
					this.OnksiazkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kategoria_KategoriaKsiazki", Storage="_Kategoria", ThisKey="kategoriaID", OtherKey="id", IsForeignKey=true)]
		public Kategoria Kategoria
		{
			get
			{
				return this._Kategoria.Entity;
			}
			set
			{
				Kategoria previousValue = this._Kategoria.Entity;
				if (((previousValue != value) 
							|| (this._Kategoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kategoria.Entity = null;
						previousValue.KategoriaKsiazkis.Remove(this);
					}
					this._Kategoria.Entity = value;
					if ((value != null))
					{
						value.KategoriaKsiazkis.Add(this);
						this._kategoriaID = value.id;
					}
					else
					{
						this._kategoriaID = default(int);
					}
					this.SendPropertyChanged("Kategoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_KategoriaKsiazki", Storage="_Ksiazka", ThisKey="ksiazkaID", OtherKey="id", IsForeignKey=true)]
		public Ksiazka Ksiazka
		{
			get
			{
				return this._Ksiazka.Entity;
			}
			set
			{
				Ksiazka previousValue = this._Ksiazka.Entity;
				if (((previousValue != value) 
							|| (this._Ksiazka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ksiazka.Entity = null;
						previousValue.KategoriaKsiazkis.Remove(this);
					}
					this._Ksiazka.Entity = value;
					if ((value != null))
					{
						value.KategoriaKsiazkis.Add(this);
						this._ksiazkaID = value.id;
					}
					else
					{
						this._ksiazkaID = default(int);
					}
					this.SendPropertyChanged("Ksiazka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ksiazka")]
	public partial class Ksiazka : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tytul;
		
		private System.Nullable<short> _rokWydania;
		
		private bool _zdjecie;
		
		private string _opis;
		
		private EntitySet<Egzemplarz> _Egzemplarzs;
		
		private EntitySet<KategoriaKsiazki> _KategoriaKsiazkis;
		
		private EntitySet<KsiazkaAutora> _KsiazkaAutoras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntytulChanging(string value);
    partial void OntytulChanged();
    partial void OnrokWydaniaChanging(System.Nullable<short> value);
    partial void OnrokWydaniaChanged();
    partial void OnzdjecieChanging(bool value);
    partial void OnzdjecieChanged();
    partial void OnopisChanging(string value);
    partial void OnopisChanged();
    #endregion
		
		public Ksiazka()
		{
			this._Egzemplarzs = new EntitySet<Egzemplarz>(new Action<Egzemplarz>(this.attach_Egzemplarzs), new Action<Egzemplarz>(this.detach_Egzemplarzs));
			this._KategoriaKsiazkis = new EntitySet<KategoriaKsiazki>(new Action<KategoriaKsiazki>(this.attach_KategoriaKsiazkis), new Action<KategoriaKsiazki>(this.detach_KategoriaKsiazkis));
			this._KsiazkaAutoras = new EntitySet<KsiazkaAutora>(new Action<KsiazkaAutora>(this.attach_KsiazkaAutoras), new Action<KsiazkaAutora>(this.detach_KsiazkaAutoras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tytul", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string tytul
		{
			get
			{
				return this._tytul;
			}
			set
			{
				if ((this._tytul != value))
				{
					this.OntytulChanging(value);
					this.SendPropertyChanging();
					this._tytul = value;
					this.SendPropertyChanged("tytul");
					this.OntytulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rokWydania", DbType="SmallInt")]
		public System.Nullable<short> rokWydania
		{
			get
			{
				return this._rokWydania;
			}
			set
			{
				if ((this._rokWydania != value))
				{
					this.OnrokWydaniaChanging(value);
					this.SendPropertyChanging();
					this._rokWydania = value;
					this.SendPropertyChanged("rokWydania");
					this.OnrokWydaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zdjecie", DbType="Bit NOT NULL")]
		public bool zdjecie
		{
			get
			{
				return this._zdjecie;
			}
			set
			{
				if ((this._zdjecie != value))
				{
					this.OnzdjecieChanging(value);
					this.SendPropertyChanging();
					this._zdjecie = value;
					this.SendPropertyChanged("zdjecie");
					this.OnzdjecieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis", DbType="VarChar(MAX)")]
		public string opis
		{
			get
			{
				return this._opis;
			}
			set
			{
				if ((this._opis != value))
				{
					this.OnopisChanging(value);
					this.SendPropertyChanging();
					this._opis = value;
					this.SendPropertyChanged("opis");
					this.OnopisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_Egzemplarz", Storage="_Egzemplarzs", ThisKey="id", OtherKey="ksiazkaID")]
		public EntitySet<Egzemplarz> Egzemplarzs
		{
			get
			{
				return this._Egzemplarzs;
			}
			set
			{
				this._Egzemplarzs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_KategoriaKsiazki", Storage="_KategoriaKsiazkis", ThisKey="id", OtherKey="ksiazkaID")]
		public EntitySet<KategoriaKsiazki> KategoriaKsiazkis
		{
			get
			{
				return this._KategoriaKsiazkis;
			}
			set
			{
				this._KategoriaKsiazkis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_KsiazkaAutora", Storage="_KsiazkaAutoras", ThisKey="id", OtherKey="ksiazkaID")]
		public EntitySet<KsiazkaAutora> KsiazkaAutoras
		{
			get
			{
				return this._KsiazkaAutoras;
			}
			set
			{
				this._KsiazkaAutoras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Egzemplarzs(Egzemplarz entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = this;
		}
		
		private void detach_Egzemplarzs(Egzemplarz entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = null;
		}
		
		private void attach_KategoriaKsiazkis(KategoriaKsiazki entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = this;
		}
		
		private void detach_KategoriaKsiazkis(KategoriaKsiazki entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = null;
		}
		
		private void attach_KsiazkaAutoras(KsiazkaAutora entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = this;
		}
		
		private void detach_KsiazkaAutoras(KsiazkaAutora entity)
		{
			this.SendPropertyChanging();
			entity.Ksiazka = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KsiazkaAutora")]
	public partial class KsiazkaAutora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _autorID;
		
		private int _ksiazkaID;
		
		private EntityRef<Autor> _Autor;
		
		private EntityRef<Ksiazka> _Ksiazka;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnautorIDChanging(int value);
    partial void OnautorIDChanged();
    partial void OnksiazkaIDChanging(int value);
    partial void OnksiazkaIDChanged();
    #endregion
		
		public KsiazkaAutora()
		{
			this._Autor = default(EntityRef<Autor>);
			this._Ksiazka = default(EntityRef<Ksiazka>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autorID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int autorID
		{
			get
			{
				return this._autorID;
			}
			set
			{
				if ((this._autorID != value))
				{
					if (this._Autor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnautorIDChanging(value);
					this.SendPropertyChanging();
					this._autorID = value;
					this.SendPropertyChanged("autorID");
					this.OnautorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ksiazkaID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ksiazkaID
		{
			get
			{
				return this._ksiazkaID;
			}
			set
			{
				if ((this._ksiazkaID != value))
				{
					if (this._Ksiazka.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnksiazkaIDChanging(value);
					this.SendPropertyChanging();
					this._ksiazkaID = value;
					this.SendPropertyChanged("ksiazkaID");
					this.OnksiazkaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_KsiazkaAutora", Storage="_Autor", ThisKey="autorID", OtherKey="id", IsForeignKey=true)]
		public Autor Autor
		{
			get
			{
				return this._Autor.Entity;
			}
			set
			{
				Autor previousValue = this._Autor.Entity;
				if (((previousValue != value) 
							|| (this._Autor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autor.Entity = null;
						previousValue.KsiazkaAutoras.Remove(this);
					}
					this._Autor.Entity = value;
					if ((value != null))
					{
						value.KsiazkaAutoras.Add(this);
						this._autorID = value.id;
					}
					else
					{
						this._autorID = default(int);
					}
					this.SendPropertyChanged("Autor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ksiazka_KsiazkaAutora", Storage="_Ksiazka", ThisKey="ksiazkaID", OtherKey="id", IsForeignKey=true)]
		public Ksiazka Ksiazka
		{
			get
			{
				return this._Ksiazka.Entity;
			}
			set
			{
				Ksiazka previousValue = this._Ksiazka.Entity;
				if (((previousValue != value) 
							|| (this._Ksiazka.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ksiazka.Entity = null;
						previousValue.KsiazkaAutoras.Remove(this);
					}
					this._Ksiazka.Entity = value;
					if ((value != null))
					{
						value.KsiazkaAutoras.Add(this);
						this._ksiazkaID = value.id;
					}
					else
					{
						this._ksiazkaID = default(int);
					}
					this.SendPropertyChanged("Ksiazka");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uzytkownik")]
	public partial class Uzytkownik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _login;
		
		private string _haslo;
		
		private string _imie;
		
		private string _nazwisko;
		
		private bool _czyAdmin;
		
		private bool _czyAktywny;
		
		private EntitySet<Wypozyczenie> _Wypozyczenies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void OnhasloChanging(string value);
    partial void OnhasloChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    partial void OnnazwiskoChanging(string value);
    partial void OnnazwiskoChanged();
    partial void OnczyAdminChanging(bool value);
    partial void OnczyAdminChanged();
    partial void OnczyAktywnyChanging(bool value);
    partial void OnczyAktywnyChanged();
    #endregion
		
		public Uzytkownik()
		{
			this._Wypozyczenies = new EntitySet<Wypozyczenie>(new Action<Wypozyczenie>(this.attach_Wypozyczenies), new Action<Wypozyczenie>(this.detach_Wypozyczenies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_haslo", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string haslo
		{
			get
			{
				return this._haslo;
			}
			set
			{
				if ((this._haslo != value))
				{
					this.OnhasloChanging(value);
					this.SendPropertyChanging();
					this._haslo = value;
					this.SendPropertyChanged("haslo");
					this.OnhasloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwisko
		{
			get
			{
				return this._nazwisko;
			}
			set
			{
				if ((this._nazwisko != value))
				{
					this.OnnazwiskoChanging(value);
					this.SendPropertyChanging();
					this._nazwisko = value;
					this.SendPropertyChanged("nazwisko");
					this.OnnazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czyAdmin", DbType="Bit NOT NULL")]
		public bool czyAdmin
		{
			get
			{
				return this._czyAdmin;
			}
			set
			{
				if ((this._czyAdmin != value))
				{
					this.OnczyAdminChanging(value);
					this.SendPropertyChanging();
					this._czyAdmin = value;
					this.SendPropertyChanged("czyAdmin");
					this.OnczyAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_czyAktywny", DbType="Bit NOT NULL")]
		public bool czyAktywny
		{
			get
			{
				return this._czyAktywny;
			}
			set
			{
				if ((this._czyAktywny != value))
				{
					this.OnczyAktywnyChanging(value);
					this.SendPropertyChanging();
					this._czyAktywny = value;
					this.SendPropertyChanged("czyAktywny");
					this.OnczyAktywnyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uzytkownik_Wypozyczenie", Storage="_Wypozyczenies", ThisKey="id", OtherKey="uzytkownikID")]
		public EntitySet<Wypozyczenie> Wypozyczenies
		{
			get
			{
				return this._Wypozyczenies;
			}
			set
			{
				this._Wypozyczenies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Wypozyczenies(Wypozyczenie entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = this;
		}
		
		private void detach_Wypozyczenies(Wypozyczenie entity)
		{
			this.SendPropertyChanging();
			entity.Uzytkownik = null;
		}
	}
}
#pragma warning restore 1591
